#!/usr/bin/env node

/**
 * Script para verificar que todas las configuraciones de email
 * est√©n apuntando al email principal de IT360: it360tecnologia@gmail.com
 * 
 * Este script revisa todos los archivos de API que env√≠an emails
 * y confirma que est√©n configurados correctamente.
 */

const fs = require('fs');
const path = require('path');

// Email principal de IT360
const IT360_EMAIL = 'it360tecnologia@gmail.com';

// Archivos a verificar
const filesToCheck = [
  'app/api/contact/route.ts',
  'app/api/contacto-hogar/route.ts',
  'app/api/contacto-vendedor/route.ts',
  'app/api/checkout/route.ts',
  'app/api/admin/approve-transfer/route.ts',
  'app/api/tickets/route.ts'
];

console.log('üîç Verificando configuraciones de email...\n');

let allCorrect = true;

filesToCheck.forEach(filePath => {
  console.log(`üìÅ Verificando: ${filePath}`);
  
  try {
    const content = fs.readFileSync(filePath, 'utf8');
    
    // Buscar patrones de email
    const emailPatterns = [
      /to:\s*\[['"`]([^'"`]+)['"`]\]/g,
      /mailto:([^\s"`>]+)/g
    ];
    
    let foundEmails = [];
    
    emailPatterns.forEach(pattern => {
      let match;
      while ((match = pattern.exec(content)) !== null) {
        foundEmails.push(match[1]);
      }
    });
    
    // Filtrar solo emails v√°lidos
    const validEmails = foundEmails.filter(email => 
      email.includes('@') && 
      !email.includes('${') && 
      !email.includes('encodeURIComponent')
    );
    
    if (validEmails.length === 0) {
      console.log('   ‚ö†Ô∏è  No se encontraron emails est√°ticos para verificar');
    } else {
      validEmails.forEach(email => {
        if (email === IT360_EMAIL) {
          console.log(`   ‚úÖ ${email} - CORRECTO`);
        } else {
          console.log(`   ‚ùå ${email} - DEBE SER ${IT360_EMAIL}`);
          allCorrect = false;
        }
      });
    }
    
  } catch (error) {
    console.log(`   ‚ùå Error al leer archivo: ${error.message}`);
    allCorrect = false;
  }
  
  console.log('');
});

// Verificar archivo .env.local
console.log('üìÅ Verificando archivo .env.local...');
try {
  const envPath = path.join(process.cwd(), '.env.local');
  if (fs.existsSync(envPath)) {
    const envContent = fs.readFileSync(envPath, 'utf8');
    if (envContent.includes('RESEND_API_KEY')) {
      console.log('   ‚úÖ RESEND_API_KEY encontrada en .env.local');
    } else {
      console.log('   ‚ö†Ô∏è  RESEND_API_KEY no encontrada en .env.local');
    }
  } else {
    console.log('   ‚ö†Ô∏è  Archivo .env.local no encontrado');
  }
} catch (error) {
  console.log(`   ‚ùå Error al verificar .env.local: ${error.message}`);
}

console.log('\n' + '='.repeat(60));

if (allCorrect) {
  console.log('üéâ ¬°Todas las configuraciones de email est√°n correctas!');
  console.log(`üìß Todos los emails se enviar√°n a: ${IT360_EMAIL}`);
} else {
  console.log('‚ö†Ô∏è  Se encontraron configuraciones que necesitan correcci√≥n.');
  console.log(`üìß Aseg√∫rate de que todos los emails apunten a: ${IT360_EMAIL}`);
}

console.log('\nüìã Resumen de funcionalidades que env√≠an emails:');
console.log('   ‚Ä¢ Formulario de contacto general');
console.log('   ‚Ä¢ Formulario de Hogar Inteligente');
console.log('   ‚Ä¢ Consultas de productos (contacto vendedor)');
console.log('   ‚Ä¢ Solicitudes de compra (checkout)');
console.log('   ‚Ä¢ Aprobaciones/rechazos de transferencias');
console.log('   ‚Ä¢ Sistema de tickets unificado');

console.log('\nüöÄ Para probar el env√≠o de emails:');
console.log('   1. Aseg√∫rate de tener RESEND_API_KEY configurada');
console.log('   2. Env√≠a un formulario desde la p√°gina web');
console.log('   3. Verifica que llegue el email a it360tecnologia@gmail.com'); 