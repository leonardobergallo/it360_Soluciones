const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function showLoginUsers() {
  try {
    console.log('üîê USUARIOS PARA INGRESAR AL SISTEMA\n');
    console.log('='.repeat(80));
    
    // Obtener todos los usuarios organizados por rol
    const allUsers = await prisma.user.findMany({
      select: {
        id: true,
        name: true,
        email: true,
        password: true,
        role: true,
        createdAt: true
      },
      orderBy: [
        { role: 'asc' },
        { createdAt: 'desc' }
      ]
    });

    if (allUsers.length === 0) {
      console.log('‚ùå No hay usuarios en la base de datos.');
      return;
    }

    // Agrupar usuarios por rol
    const usersByRole = {
      ADMIN: allUsers.filter(user => user.role === 'ADMIN'),
      TECNICO: allUsers.filter(user => user.role === 'TECNICO'),
      USER: allUsers.filter(user => user.role === 'USER')
    };

    // Mostrar administradores
    if (usersByRole.ADMIN.length > 0) {
      console.log('\nüëë ADMINISTRADORES:');
      console.log('='.repeat(50));
      usersByRole.ADMIN.forEach((user, index) => {
        console.log(`\n   üîê Admin ${index + 1}:`);
        console.log(`      üìß Email: ${user.email}`);
        console.log(`      üîë Contrase√±a: ${user.password}`);
        console.log(`      üë§ Nombre: ${user.name}`);
        console.log(`      üìÖ Creado: ${user.createdAt.toLocaleDateString('es-AR')}`);
        console.log('   ' + '‚îÄ'.repeat(40));
      });
    }

    // Mostrar t√©cnicos
    if (usersByRole.TECNICO.length > 0) {
      console.log('\nüë®‚Äçüíª T√âCNICOS:');
      console.log('='.repeat(50));
      usersByRole.TECNICO.forEach((user, index) => {
        console.log(`\n   üîß T√©cnico ${index + 1}:`);
        console.log(`      üìß Email: ${user.email}`);
        console.log(`      üîë Contrase√±a: ${user.password}`);
        console.log(`      üë§ Nombre: ${user.name}`);
        console.log(`      üìÖ Creado: ${user.createdAt.toLocaleDateString('es-AR')}`);
        console.log('   ' + '‚îÄ'.repeat(40));
      });
    }

    // Mostrar clientes
    if (usersByRole.USER.length > 0) {
      console.log('\nüë§ CLIENTES:');
      console.log('='.repeat(50));
      usersByRole.USER.forEach((user, index) => {
        console.log(`\n   üõí Cliente ${index + 1}:`);
        console.log(`      üìß Email: ${user.email}`);
        console.log(`      üîë Contrase√±a: ${user.password}`);
        console.log(`      üë§ Nombre: ${user.name}`);
        console.log(`      üìÖ Creado: ${user.createdAt.toLocaleDateString('es-AR')}`);
        console.log('   ' + '‚îÄ'.repeat(40));
      });
    }

    // Resumen para login r√°pido
    console.log('\nüöÄ RESUMEN PARA LOGIN R√ÅPIDO:');
    console.log('='.repeat(50));
    
    if (usersByRole.ADMIN.length > 0) {
      console.log('\n   üëë ADMIN (Panel de administraci√≥n):');
      const admin = usersByRole.ADMIN[0];
      console.log(`      üìß ${admin.email}`);
      console.log(`      üîë ${admin.password}`);
    }
    
    if (usersByRole.TECNICO.length > 0) {
      console.log('\n   üë®‚Äçüíª T√âCNICO (Panel t√©cnico):');
      const tecnico = usersByRole.TECNICO[0];
      console.log(`      üìß ${tecnico.email}`);
      console.log(`      üîë ${tecnico.password}`);
    }
    
    if (usersByRole.USER.length > 0) {
      console.log('\n   üë§ CLIENTE (Acceso normal):');
      const cliente = usersByRole.USER[0];
      console.log(`      üìß ${cliente.email}`);
      console.log(`      üîë ${cliente.password}`);
    }

    console.log('\nüìä ESTAD√çSTICAS:');
    console.log('='.repeat(50));
    console.log(`   ‚Ä¢ Total de usuarios: ${allUsers.length}`);
    console.log(`   ‚Ä¢ Administradores: ${usersByRole.ADMIN.length}`);
    console.log(`   ‚Ä¢ T√©cnicos: ${usersByRole.TECNICO.length}`);
    console.log(`   ‚Ä¢ Clientes: ${usersByRole.USER.length}`);

    console.log('\nüí° TIPS:');
    console.log('='.repeat(50));
    console.log('   ‚Ä¢ Usa ADMIN para acceder al panel de administraci√≥n');
    console.log('   ‚Ä¢ Usa T√âCNICO para acceder al panel t√©cnico');
    console.log('   ‚Ä¢ Usa CLIENTE para acceder normal al sitio');
    console.log('   ‚Ä¢ URL de login: /login');

  } catch (error) {
    console.error('‚ùå Error al obtener usuarios:', error);
  } finally {
    await prisma.$disconnect();
  }
}

// Ejecutar el script
showLoginUsers(); 