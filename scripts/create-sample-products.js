#!/usr/bin/env node

/**
 * Script para crear productos de muestra
 * Genera productos de diferentes categor√≠as para probar el sistema
 */

const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

const sampleProducts = [
  {
    name: "Monitor LED 24\" Samsung",
    description: "Monitor LED de 24 pulgadas, resoluci√≥n Full HD 1920x1080, tiempo de respuesta 5ms, ideal para gaming y trabajo",
    price: 45000,
    stock: 15,
    category: "Monitores",
    image: "/servicio-productos.png"
  },
  {
    name: "Teclado Mec√°nico RGB",
    description: "Teclado mec√°nico con switches Cherry MX Red, iluminaci√≥n RGB personalizable, ideal para gaming y programaci√≥n",
    price: 25000,
    stock: 25,
    category: "Perif√©ricos",
    image: "/servicio-productos.png"
  },
  {
    name: "Mouse Gaming Logitech",
    description: "Mouse gaming con sensor √≥ptico de alta precisi√≥n, 6 botones programables, DPI ajustable hasta 16000",
    price: 18000,
    stock: 30,
    category: "Perif√©ricos",
    image: "/servicio-productos.png"
  },
  {
    name: "SSD 500GB Kingston",
    description: "Disco s√≥lido interno de 500GB, velocidad de lectura hasta 3500MB/s, ideal para mejorar el rendimiento del sistema",
    price: 35000,
    stock: 20,
    category: "Almacenamiento",
    image: "/servicio-productos.png"
  },
  {
    name: "Memoria RAM 16GB DDR4",
    description: "M√≥dulo de memoria RAM DDR4 de 16GB, velocidad 3200MHz, compatible con la mayor√≠a de placas base modernas",
    price: 28000,
    stock: 18,
    category: "Memoria",
    image: "/servicio-productos.png"
  },
  {
    name: "Webcam HD 1080p",
    description: "C√°mara web HD con resoluci√≥n 1080p, micr√≥fono integrado, ideal para videoconferencias y streaming",
    price: 15000,
    stock: 22,
    category: "Accesorios",
    image: "/servicio-productos.png"
  },
  {
    name: "Auriculares Gaming",
    description: "Auriculares gaming con sonido envolvente 7.1, micr√≥fono con cancelaci√≥n de ruido, c√≥modos para largas sesiones",
    price: 22000,
    stock: 12,
    category: "Audio",
    image: "/servicio-productos.png"
  },
  {
    name: "Fuente de Poder 650W",
    description: "Fuente de poder certificada 80 Plus Bronze, 650W, modular, ideal para sistemas gaming de gama media",
    price: 32000,
    stock: 8,
    category: "Componentes",
    image: "/servicio-productos.png"
  },
  {
    name: "Placa de Video GTX 1660",
    description: "Tarjeta gr√°fica NVIDIA GTX 1660 6GB GDDR5, ideal para gaming en 1080p y edici√≥n de video",
    price: 120000,
    stock: 5,
    category: "Gr√°ficas",
    image: "/servicio-productos.png"
  },
  {
    name: "Impresora L√°ser Multifunci√≥n",
    description: "Impresora l√°ser multifunci√≥n, impresi√≥n, escaneo y copiado, conectividad WiFi, ideal para oficina",
    price: 85000,
    stock: 10,
    category: "Impresoras",
    image: "/servicio-productos.png"
  }
];

const sampleServices = [
  {
    name: "Mantenimiento de PC",
    description: "Servicio completo de mantenimiento preventivo y correctivo para computadoras de escritorio y notebooks",
    price: 8000
  },
  {
    name: "Instalaci√≥n de Software",
    description: "Instalaci√≥n y configuraci√≥n de software de oficina, antivirus, drivers y programas especializados",
    price: 5000
  },
  {
    name: "Recuperaci√≥n de Datos",
    description: "Servicio de recuperaci√≥n de datos perdidos por fallas de hardware, virus o eliminaci√≥n accidental",
    price: 15000
  },
  {
    name: "Armado de PC",
    description: "Armado completo de computadora personalizada seg√∫n tus necesidades, con garant√≠a y soporte",
    price: 12000
  },
  {
    name: "Configuraci√≥n de Red",
    description: "Instalaci√≥n y configuraci√≥n de redes WiFi, cableado estructurado y equipos de red",
    price: 10000
  }
];

async function createSampleData() {
  try {
    console.log('üå± Creando datos de muestra...\n');

    // Crear productos
    console.log('üì¶ Creando productos de muestra...');
    for (const product of sampleProducts) {
      await prisma.product.create({
        data: {
          ...product,
          active: true
        }
      });
      console.log(`   ‚úÖ ${product.name}`);
    }

    // Crear servicios
    console.log('\nüîß Creando servicios de muestra...');
    for (const service of sampleServices) {
      await prisma.service.create({
        data: service
      });
      console.log(`   ‚úÖ ${service.name}`);
    }

    // Mostrar estad√≠sticas
    const productCount = await prisma.product.count();
    const serviceCount = await prisma.service.count();

    console.log('\nüéâ ¬°Datos de muestra creados exitosamente!');
    console.log('üìä Estad√≠sticas:');
    console.log(`   üì¶ Productos: ${productCount}`);
    console.log(`   üîß Servicios: ${serviceCount}`);

    // Mostrar algunos productos creados
    console.log('\nüìã Productos disponibles:');
    const products = await prisma.product.findMany({
      select: { name: true, price: true, stock: true, category: true }
    });

    products.forEach(product => {
      console.log(`   ‚Ä¢ ${product.name} - $${product.price.toLocaleString()} (${product.stock} en stock) - ${product.category}`);
    });

    console.log('\nüöÄ El sistema est√° listo para usar!');
    console.log('üí° Puedes acceder a:');
    console.log('   ‚Ä¢ /admin - Panel de administraci√≥n');
    console.log('   ‚Ä¢ /admin/products - Gesti√≥n de productos');
    console.log('   ‚Ä¢ /admin/services - Gesti√≥n de servicios');
    console.log('   ‚Ä¢ /catalogo - Cat√°logo p√∫blico');

  } catch (error) {
    console.error('‚ùå Error creando datos de muestra:', error);
  } finally {
    await prisma.$disconnect();
  }
}

createSampleData(); 