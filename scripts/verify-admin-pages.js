#!/usr/bin/env node

/**
 * Script para verificar que las p√°ginas de administraci√≥n funcionen correctamente
 * Verifica que se muestren productos y servicios
 */

const fs = require('fs');

console.log('üîç Verificando p√°ginas de administraci√≥n...\n');

// 1. Verificar archivos de p√°ginas admin
console.log('üìÅ 1. Verificando archivos de p√°ginas admin...');

const adminPages = [
  'app/admin/page.tsx',
  'app/admin/products/page.tsx',
  'app/admin/services/page.tsx',
  'app/admin/sales/page.tsx',
  'app/admin/users/page.tsx',
  'app/admin/presupuestos/page.tsx'
];

adminPages.forEach(page => {
  if (fs.existsSync(page)) {
    console.log(`   ‚úÖ ${page} - Existe`);
  } else {
    console.log(`   ‚ùå ${page} - NO EXISTE`);
  }
});

// 2. Verificar APIs
console.log('\nüîå 2. Verificando APIs...');

const apis = [
  'app/api/products/route.ts',
  'app/api/services/route.ts',
  'app/api/services/[id]/route.ts',
  'app/api/sales/route.ts',
  'app/api/users/route.ts',
  'app/api/presupuestos/route.ts'
];

apis.forEach(api => {
  if (fs.existsSync(api)) {
    console.log(`   ‚úÖ ${api} - Existe`);
  } else {
    console.log(`   ‚ùå ${api} - NO EXISTE`);
  }
});

// 3. Verificar componentes
console.log('\nüß© 3. Verificando componentes...');

const components = [
  'components/AdminLayout.tsx',
  'components/Table.tsx',
  'components/AuthGuard.tsx'
];

components.forEach(component => {
  if (fs.existsSync(component)) {
    console.log(`   ‚úÖ ${component} - Existe`);
  } else {
    console.log(`   ‚ùå ${component} - NO EXISTE`);
  }
});

// 4. Verificar configuraci√≥n de servicios
console.log('\n‚öôÔ∏è 4. Verificando configuraci√≥n de servicios...');

const servicesPage = fs.readFileSync('app/admin/services/page.tsx', 'utf8');
const productsPage = fs.readFileSync('app/admin/products/page.tsx', 'utf8');

// Verificar fetch de servicios
if (servicesPage.includes('fetch(\'/api/services\')')) {
  console.log('   ‚úÖ P√°gina de servicios hace fetch a /api/services');
} else {
  console.log('   ‚ùå P√°gina de servicios NO hace fetch a /api/services');
}

// Verificar fetch de productos
if (productsPage.includes('fetch(\'/api/products\')')) {
  console.log('   ‚úÖ P√°gina de productos hace fetch a /api/products');
} else {
  console.log('   ‚ùå P√°gina de productos NO hace fetch a /api/products');
}

// Verificar manejo de errores
if (servicesPage.includes('try') && servicesPage.includes('catch')) {
  console.log('   ‚úÖ P√°gina de servicios tiene manejo de errores');
} else {
  console.log('   ‚ùå P√°gina de servicios NO tiene manejo de errores');
}

if (productsPage.includes('try') && productsPage.includes('catch')) {
  console.log('   ‚úÖ P√°gina de productos tiene manejo de errores');
} else {
  console.log('   ‚ùå P√°gina de productos NO tiene manejo de errores');
}

// 5. Verificar funciones CRUD
console.log('\nüîÑ 5. Verificando funciones CRUD...');

// Servicios
if (servicesPage.includes('handleAddService')) {
  console.log('   ‚úÖ Funci√≥n handleAddService implementada');
} else {
  console.log('   ‚ùå Funci√≥n handleAddService NO implementada');
}

if (servicesPage.includes('handleEditService')) {
  console.log('   ‚úÖ Funci√≥n handleEditService implementada');
} else {
  console.log('   ‚ùå Funci√≥n handleEditService NO implementada');
}

if (servicesPage.includes('handleDeleteService')) {
  console.log('   ‚úÖ Funci√≥n handleDeleteService implementada');
} else {
  console.log('   ‚ùå Funci√≥n handleDeleteService NO implementada');
}

// Productos
if (productsPage.includes('handleAddProduct')) {
  console.log('   ‚úÖ Funci√≥n handleAddProduct implementada');
} else {
  console.log('   ‚ùå Funci√≥n handleAddProduct NO implementada');
}

if (productsPage.includes('handleEditProduct')) {
  console.log('   ‚úÖ Funci√≥n handleEditProduct implementada');
} else {
  console.log('   ‚ùå Funci√≥n handleEditProduct NO implementada');
}

if (productsPage.includes('handleDeleteProduct')) {
  console.log('   ‚úÖ Funci√≥n handleDeleteProduct implementada');
} else {
  console.log('   ‚ùå Funci√≥n handleDeleteProduct NO implementada');
}

// 6. Verificar APIs CRUD
console.log('\nüîó 6. Verificando APIs CRUD...');

const servicesApi = fs.readFileSync('app/api/services/route.ts', 'utf8');
const productsApi = fs.readFileSync('app/api/products/route.ts', 'utf8');

// Servicios API
if (servicesApi.includes('export async function GET')) {
  console.log('   ‚úÖ API servicios tiene GET');
} else {
  console.log('   ‚ùå API servicios NO tiene GET');
}

if (servicesApi.includes('export async function POST')) {
  console.log('   ‚úÖ API servicios tiene POST');
} else {
  console.log('   ‚ùå API servicios NO tiene POST');
}

// Productos API
if (productsApi.includes('export async function GET')) {
  console.log('   ‚úÖ API productos tiene GET');
} else {
  console.log('   ‚ùå API productos NO tiene GET');
}

if (productsApi.includes('export async function POST')) {
  console.log('   ‚úÖ API productos tiene POST');
} else {
  console.log('   ‚ùå API productos NO tiene POST');
}

if (productsApi.includes('export async function PUT')) {
  console.log('   ‚úÖ API productos tiene PUT');
} else {
  console.log('   ‚ùå API productos NO tiene PUT');
}

if (productsApi.includes('export async function DELETE')) {
  console.log('   ‚úÖ API productos tiene DELETE');
} else {
  console.log('   ‚ùå API productos NO tiene DELETE');
}

// 7. Soluciones para problemas comunes
console.log('\nüí° 7. Soluciones para problemas comunes:');

console.log('\n   üîÑ Si no se ven datos:');
console.log('   ‚Ä¢ Verifica que el servidor est√© corriendo: npm run dev');
console.log('   ‚Ä¢ Verifica que la base de datos est√© conectada');
console.log('   ‚Ä¢ Ejecuta: node scripts/seed.js para poblar datos');
console.log('   ‚Ä¢ Revisa la consola del navegador para errores');

console.log('\n   üîÑ Si hay errores 401:');
console.log('   ‚Ä¢ Limpia localStorage y vuelve a loguear');
console.log('   ‚Ä¢ Verifica que el usuario tenga rol ADMIN');
console.log('   ‚Ä¢ Ejecuta: node scripts/fix-cart-auth.js');

console.log('\n   üîÑ Si no se pueden crear/editar:');
console.log('   ‚Ä¢ Verifica que las APIs est√©n funcionando');
console.log('   ‚Ä¢ Revisa los logs del servidor');
console.log('   ‚Ä¢ Verifica la estructura de la base de datos');

console.log('\n============================================================');
console.log('üìã RESUMEN DE VERIFICACI√ìN');
console.log('============================================================');
console.log('üéØ Si todos los archivos existen y est√°n configurados:');
console.log('   ‚Ä¢ Las p√°ginas deber√≠an mostrar datos correctamente');
console.log('   ‚Ä¢ Las funciones CRUD deber√≠an funcionar');
console.log('   ‚Ä¢ Los errores deber√≠an manejarse apropiadamente');
console.log('');
console.log('üöÄ Pr√≥ximos pasos:');
console.log('   ‚Ä¢ npm run dev - Iniciar servidor');
console.log('   ‚Ä¢ Ir a /admin - Verificar dashboard');
console.log('   ‚Ä¢ Probar crear/editar/eliminar productos y servicios');
console.log('   ‚Ä¢ Revisar consola del navegador para errores'); 