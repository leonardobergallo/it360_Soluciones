const fetch = (...args) => import('node-fetch').then(({default: fetch}) => fetch(...args));

async function testAPIEndpoints() {
  console.log('üß™ Probando endpoints de las APIs...\n');

  const baseURL = 'http://localhost:3000';

  // 1. Probar API de productos
  console.log('1Ô∏è‚É£ Probando GET /api/products...');
  try {
    const response = await fetch(`${baseURL}/api/products`);
    const data = await response.json();
    
    if (response.ok) {
      console.log(`‚úÖ API de productos funcionando - ${data.length} productos encontrados`);
    } else {
      console.log(`‚ùå Error en API de productos: ${response.status} - ${data.error}`);
    }
  } catch (error) {
    console.log(`‚ùå Error conectando a API de productos: ${error.message}`);
  }

  // 2. Probar API de servicios
  console.log('\n2Ô∏è‚É£ Probando GET /api/services...');
  try {
    const response = await fetch(`${baseURL}/api/services`);
    const data = await response.json();
    
    if (response.ok) {
      console.log(`‚úÖ API de servicios funcionando - ${data.length} servicios encontrados`);
    } else {
      console.log(`‚ùå Error en API de servicios: ${response.status} - ${data.error}`);
    }
  } catch (error) {
    console.log(`‚ùå Error conectando a API de servicios: ${error.message}`);
  }

  // 3. Probar API de carrito (sin autenticaci√≥n)
  console.log('\n3Ô∏è‚É£ Probando GET /api/cart (sin autenticaci√≥n)...');
  try {
    const response = await fetch(`${baseURL}/api/cart`);
    const data = await response.json();
    
    if (response.status === 401) {
      console.log('‚úÖ API de carrito funcionando - Correctamente rechaza peticiones no autenticadas');
    } else {
      console.log(`‚ö†Ô∏è  API de carrito: ${response.status} - ${data.error}`);
    }
  } catch (error) {
    console.log(`‚ùå Error conectando a API de carrito: ${error.message}`);
  }

  // 4. Probar p√°gina principal
  console.log('\n4Ô∏è‚É£ Probando p√°gina principal...');
  try {
    const response = await fetch(`${baseURL}/`);
    
    if (response.ok) {
      console.log('‚úÖ P√°gina principal funcionando');
    } else {
      console.log(`‚ùå Error en p√°gina principal: ${response.status}`);
    }
  } catch (error) {
    console.log(`‚ùå Error conectando a p√°gina principal: ${error.message}`);
  }

  // 5. Probar p√°gina de cat√°logo
  console.log('\n5Ô∏è‚É£ Probando p√°gina de cat√°logo...');
  try {
    const response = await fetch(`${baseURL}/catalogo`);
    
    if (response.ok) {
      console.log('‚úÖ P√°gina de cat√°logo funcionando');
    } else {
      console.log(`‚ùå Error en p√°gina de cat√°logo: ${response.status}`);
    }
  } catch (error) {
    console.log(`‚ùå Error conectando a p√°gina de cat√°logo: ${error.message}`);
  }

  // 6. Probar p√°gina de admin productos
  console.log('\n6Ô∏è‚É£ Probando p√°gina de admin productos...');
  try {
    const response = await fetch(`${baseURL}/admin/products`);
    
    if (response.ok) {
      console.log('‚úÖ P√°gina de admin productos funcionando');
    } else {
      console.log(`‚ùå Error en p√°gina de admin productos: ${response.status}`);
    }
  } catch (error) {
    console.log(`‚ùå Error conectando a p√°gina de admin productos: ${error.message}`);
  }

  console.log('\nüéâ ¬°Pruebas de endpoints completadas!');
  console.log('\nüåê El servidor est√° listo en: http://localhost:3000');
}

// Ejecutar las pruebas
testAPIEndpoints().catch(console.error);
