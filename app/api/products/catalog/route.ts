import { NextResponse } from 'next/server';

// GET - Obtener solo productos activos para el cat√°logo p√∫blico
export async function GET() {
  try {
    console.log('üîç Obteniendo productos activos para cat√°logo...');
    
    // Importar Prisma din√°micamente
    const { PrismaClient } = await import('@prisma/client');
    const prisma = new PrismaClient();
    
    // Obtener SOLO productos activos
    const products = await Promise.race([
      prisma.product.findMany({
        where: { 
          active: true // Solo productos activos
        },
        orderBy: {
          name: 'asc'
        }
      }),
      new Promise((_, reject) => 
        setTimeout(() => reject(new Error('Timeout de conexi√≥n a la base de datos')), 10000)
      )
    ]) as any[];
    
    console.log(`‚úÖ ${products.length} productos activos encontrados para cat√°logo`);
    
    await prisma.$disconnect();
    
    // Asegurar que siempre devolvemos un array
    return NextResponse.json(Array.isArray(products) ? products : []);
  } catch (error: any) {
    console.error('‚ùå Error obteniendo productos activos:', error);
    
    // En caso de error, devolver array vac√≠o
    return NextResponse.json([]);
  }
}
